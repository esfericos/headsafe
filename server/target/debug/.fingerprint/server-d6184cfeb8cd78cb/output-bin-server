{"$message_type":"diagnostic","message":"unresolved imports `tokio::io::AsyncReadExt`, `tokio::io::AsyncWriteExt`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018 or later, paths in `use` statements are relative to the current\nmodule unless they begin with the name of a crate or a literal `crate::`, in\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\nand `super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nSince Rust 2018 the `extern crate` declaration is not required and\nyou can instead just `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":45,"byte_end":57,"line_start":2,"line_end":2,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt};","highlight_start":17,"highlight_end":29}],"label":"no `AsyncReadExt` in `io`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":59,"byte_end":72,"line_start":2,"line_end":2,"column_start":31,"column_end":44,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt};","highlight_start":31,"highlight_end":44}],"label":"no `AsyncWriteExt` in `io`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"found an item that was configured out","code":null,"level":"note","spans":[{"file_name":"/Users/edu/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.39.3/src/io/mod.rs","byte_start":9720,"byte_end":9732,"line_start":274,"line_end":274,"column_start":122,"column_end":134,"is_primary":true,"text":[{"text":"        copy, copy_bidirectional, copy_bidirectional_with_sizes, copy_buf, duplex, empty, repeat, sink, AsyncBufReadExt, AsyncReadExt, AsyncSeekExt, AsyncWriteExt,","highlight_start":122,"highlight_end":134}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the item is gated behind the `io-util` feature","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"found an item that was configured out","code":null,"level":"note","spans":[{"file_name":"/Users/edu/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.39.3/src/io/mod.rs","byte_start":9748,"byte_end":9761,"line_start":274,"line_end":274,"column_start":150,"column_end":163,"is_primary":true,"text":[{"text":"        copy, copy_bidirectional, copy_bidirectional_with_sizes, copy_buf, duplex, empty, repeat, sink, AsyncBufReadExt, AsyncReadExt, AsyncSeekExt, AsyncWriteExt,","highlight_start":150,"highlight_end":163}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"the item is gated behind the `io-util` feature","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":45,"byte_end":57,"line_start":2,"line_end":2,"column_start":17,"column_end":29,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt};","highlight_start":17,"highlight_end":29}],"label":null,"suggested_replacement":"AsyncRead","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":59,"byte_end":72,"line_start":2,"line_end":2,"column_start":31,"column_end":44,"is_primary":true,"text":[{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt};","highlight_start":31,"highlight_end":44}],"label":null,"suggested_replacement":"AsyncWrite","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved imports `tokio::io::AsyncReadExt`, `tokio::io::AsyncWriteExt`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:2:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::io::{AsyncReadExt, AsyncWriteExt};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AsyncWriteExt` in `io`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `AsyncReadExt` in `io`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: found an item that was configured out\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/edu/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.39.3/src/io/mod.rs:274:122\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   copy, copy_bidirectional, copy_bidirectional_with_sizes, copy_buf, duplex, empty, repeat, sink, AsyncBufReadExt, AsyncReadExt, Asyn\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the item is gated behind the `io-util` feature\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: found an item that was configured out\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/edu/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.39.3/src/io/mod.rs:274:150\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m repeat, sink, AsyncBufReadExt, AsyncReadExt, AsyncSeekExt, AsyncWriteExt,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the item is gated behind the `io-util` feature\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse tokio::io::{\u001b[0m\u001b[0m\u001b[38;5;10mAsyncRead\u001b[0m\u001b[0m, AsyncWriteExt};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: a similar name exists in the module\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse tokio::io::{AsyncReadExt, \u001b[0m\u001b[0m\u001b[38;5;10mAsyncWrite\u001b[0m\u001b[0m};\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `tokio::net::TcpListener`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":4,"byte_end":27,"line_start":1,"line_end":1,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use tokio::net::TcpListener;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":29,"line_start":1,"line_end":2,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use tokio::net::TcpListener;","highlight_start":1,"highlight_end":29},{"text":"use tokio::io::{AsyncReadExt, AsyncWriteExt};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `tokio::net::TcpListener`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse tokio::net::TcpListener;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"cycle detected when expanding type alias `Result`","code":{"code":"E0391","explanation":"A type dependency cycle has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0391\ntrait FirstTrait : SecondTrait {\n\n}\n\ntrait SecondTrait : FirstTrait {\n\n}\n```\n\nThe previous example contains a circular dependency between two traits:\n`FirstTrait` depends on `SecondTrait` which itself depends on `FirstTrait`.\n\nSee https://rustc-dev-guide.rust-lang.org/overview.html#queries and\nhttps://rustc-dev-guide.rust-lang.org/query.html for more information.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":112,"byte_end":122,"line_start":5,"line_end":5,"column_start":18,"column_end":28,"is_primary":true,"text":[{"text":"type Result<T> = Result<()>;","highlight_start":18,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...which immediately requires expanding type alias `Result` again","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"type aliases cannot be recursive","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using a struct, enum, or union instead to break the cycle","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"see <https://doc.rust-lang.org/reference/types.html#recursive-types> for more information","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"cycle used when checking that `Result` is well-formed","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":95,"byte_end":109,"line_start":5,"line_end":5,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"type Result<T> = Result<()>;","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0391]\u001b[0m\u001b[0m\u001b[1m: cycle detected when expanding type alias `Result`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Result<T> = Result<()>;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: ...which immediately requires expanding type alias `Result` again\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: type aliases cannot be recursive\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider using a struct, enum, or union instead to break the cycle\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: see <https://doc.rust-lang.org/reference/types.html#recursive-types> for more information\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: cycle used when checking that `Result` is well-formed\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtype Result<T> = Result<()>;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected value, found struct variant `StorageCommand::StoreImage`","code":{"code":"E0533","explanation":"An item which isn't a unit struct, a variant, nor a constant has been used as a\nmatch pattern.\n\nErroneous code example:\n\n```compile_fail,E0533\nstruct Tortoise;\n\nimpl Tortoise {\n    fn turtle(&self) -> u32 { 0 }\n}\n\nmatch 0u32 {\n    Tortoise::turtle => {} // Error!\n    _ => {}\n}\nif let Tortoise::turtle = 0u32 {} // Same error!\n```\n\nIf you want to match against a value returned by a method, you need to bind the\nvalue first:\n\n```\nstruct Tortoise;\n\nimpl Tortoise {\n    fn turtle(&self) -> u32 { 0 }\n}\n\nmatch 0u32 {\n    x if x == Tortoise.turtle() => {} // Bound into `x` then we compare it!\n    _ => {}\n}\n```\n"},"level":"error","spans":[{"file_name":"src/stg.rs","byte_start":806,"byte_end":832,"line_start":38,"line_end":38,"column_start":30,"column_end":56,"is_primary":true,"text":[{"text":"        let _ = self.tx.send(StorageCommand::StoreImage(data)).await;","highlight_start":30,"highlight_end":56}],"label":"not a value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0533]\u001b[0m\u001b[0m\u001b[1m: expected value, found struct variant `StorageCommand::StoreImage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/stg.rs:38:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let _ = self.tx.send(StorageCommand::StoreImage(data)).await;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a value\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"expected tuple struct or tuple variant, found struct variant `StorageCommand::StoreImage`","code":{"code":"E0164","explanation":"Something which is neither a tuple struct nor a tuple variant was used as a\npattern.\n\nErroneous code example:\n\n```compile_fail,E0164\nenum A {\n    B,\n    C,\n}\n\nimpl A {\n    fn new() {}\n}\n\nfn bar(foo: A) {\n    match foo {\n        A::new() => (), // error!\n        _ => {}\n    }\n}\n```\n\nThis error means that an attempt was made to match something which is neither a\ntuple struct nor a tuple variant. Only these two elements are allowed as a\npattern:\n\n```\nenum A {\n    B,\n    C,\n}\n\nimpl A {\n    fn new() {}\n}\n\nfn bar(foo: A) {\n    match foo {\n        A::B => (), // ok!\n        _ => {}\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/stg.rs","byte_start":383,"byte_end":415,"line_start":16,"line_end":16,"column_start":17,"column_end":49,"is_primary":true,"text":[{"text":"                StorageCommand::StoreImage(data) => todo!(),","highlight_start":17,"highlight_end":49}],"label":"not a tuple struct or tuple variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0164]\u001b[0m\u001b[0m\u001b[1m: expected tuple struct or tuple variant, found struct variant `StorageCommand::StoreImage`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/stg.rs:16:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                StorageCommand::StoreImage(data) => todo!(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a tuple struct or tuple variant\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0164, E0391, E0432, E0533.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0164, E0391, E0432, E0533.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0164`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0164`.\u001b[0m\n"}
